{
  "name": "pivotal",
  "description": "API library for PivotalTracker",
  "keywords": [
    "pivotal",
    "tracker",
    "pivotaltracker"
  ],
  "homepage": "https://github.com/Wizcorp/node-pivotal",
  "version": "0.1.3",
  "author": {
    "name": "Marc Trudel",
    "email": "mtrudel@wizcorp.jp"
  },
  "contributors": [],
  "engines": {
    "node": ">=0.4.12"
  },
  "main": "index.js",
  "directories": {
    "examples": "./examples",
    "unittests": "./vows"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/Wizcorp/node-pivotal.git"
  },
  "dependencies": {
    "async": ">=0.1.15",
    "colors": ">=0.6.0-1",
    "validator": ">=0.3.9",
    "xml2js": ">=0.1.13"
  },
  "devDependencies": {
    "vows": ">=0.6.1",
    "jslint": ">=0.1.4"
  },
  "readme": "# node-pivotal : Node.JS API Library for PivotalTracker\n\nLicense: MIT\n\nTo install:\n\n    npm install pivotal\n\n## To use:\n\n```javascript\nvar pivotal = require(\"pivotal\");\npivotal.useToken(\"myToken\");\n```\n\nYou can also retrieve the token initially by using the pivotal.getToken function\n\n## For more information:\n\n- [PivotalTracker API v3 Documentation](https://www.pivotaltracker.com/help/api?version=v3 \"PivotalTracker\")\n\n## API methods\n\n### pivotal.getToken : retrieve a user's token\n\nref: https://www.pivotaltracker.com/help/api?version=v3#retrieve_token_post\n\n__Arguments__\n\n+ user : user name (email)\n+ pass : the user's password\n\n### pivotal.useToken : set the token to use for all Pivotal callso\n\n__Arguments__\n\n+ token: A valid Pivotal Token\n\n### pivotal.getActivities: list activities for the projects you have access to\n\nref: https://www.pivotaltracker.com/help/api?version=v3#get_all_activity\n\n        and\n\n     https://www.pivotaltracker.com/help/api?version=v3#get_project_activity\n\n__Arguments__\n\n+ filters : Limits the return data\n\n```javascript\n{\n    project (int)       : project id\n    limit               : maximum return entries\n    occurred_since_date : earliest date for return entries\n    newer_than_version  : allows restricting the activity feed to only those items that have a greater than supplied version\n}\n```\n\n### pivotal.getProjects : get all the projects you have access to\n\nref: https://www.pivotaltracker.com/help/api?version=v3#get_project_all_projects\n### pivotal.getProject : access a project\n\nref: https://www.pivotaltracker.com/help/api?version=v3#get_project_info\n\n__Arguments__\n\n+ id (int) : id of the project\n\n### pivotal.addProject : create a project\n\nref: https://www.pivotaltracker.com/help/api?version=v3#add_project\n\n__Arguments__\n+ project : Data of the project to add\n\n```javascript\n{\n    name (string)                   : The project's name\n    iteration_length (int)          : Iteration length\n    no_owner (boolean, optional)    : Does the project have an owner?\n}\n```\n\n### pivotal.getMemberships : get the members of this projects\n\nref: https://www.pivotaltracker.com/help/api?version=v3#get_memberships\n\n__Arguments__\n\n+ projectId (int) : id of the project\n\n### pivotal.getMembership : get a single member of this projects\n\nref: https://www.pivotaltracker.com/help/api?version=v3#get_membership_info\n\n__Arguments__\n\n+ projectId (int)     : id of the project\n+ membershipId (int)  : id of the member\n\n### pivotal.addMembership : add a member to this projects\n\nref: https://www.pivotaltracker.com/help/api?version=v3#add_membership\n\n__Arguments__\n\n+ projectId (int)          : id of the project\n+ membershipData : Data of the new member\n\n```javascript\n{\n    role : Member or Owner\n    person : Personal information {\n        name     : Person's full name\n        initials : Name's initials\n        email    : E-mail\n    }\n}\n```\n\n__Note__: The user does not have to be in the system already. He will receieve\nan email asking him to join if he does not have a project already.\n\n### pivotal.removeMembership : remove a single member of this projects\n\nref: https://www.pivotaltracker.com/help/api?version=v3#remove_membership\n\n__Arguments__\n\n+ projectId (int)     : id of the project\n+ membershipId (int)  : id of the member\n\n### pivotal.getIterations : get a project list of iterations\n\nref: https://www.pivotaltracker.com/help/api?version=v3#get_iterations\n\n__Arguments__\n\n+ projectId (int)     : id of the project\n+ membershipId (int)  : id of the member\n\n### pivotal.getStories: Get a list of stories for this project\n\nref: https://www.pivotaltracker.com/help/api?version=v3#get_all_stories\n\n__Arguments__\n\n+ projectId (int)     : id of the project\n+ filters : Limits the return data\n\n```javascript\n{\n    limit               : maximum return entries\n    offset              : start from story num. N in the list\n    filter              : search string to use (ex: filter=label:\"needs feedback\" type:bug)\n}\n```\n\n### pivotal.getStory: Get a story from a project\n\nref: https://www.pivotaltracker.com/help/api?version=v3#get_story\n\n__Arguments__\n\n+ projectId (int)     : id of the project\n+ storyId (int)       : id of the story\n\n### pivotal.addStory: Add a story to a project\n\nref: https://www.pivotaltracker.com/help/api?version=v3#add_story\n\n        and\n\n     https://www.pivotaltracker.com/help/api?version=v3#link_story\n\n__Arguments__\n\n+ projectId (int)     : id of the project\n+ storyData : data of the story\n\n```javascript\n{\n    name           : Name of this story\n    story_type     : bug, feature, chore, release\n    estimate (int) : number which indicates the level of difficulty of the story\n    description    : description,\n    labels         : Comma-separated list of labels\n    requested_by   : Name of the requester\n                   (should be an existing member person name,\n                   but I dont know if this is an actual limitation)\n}\n```\n\n### pivotal.addStoryAttachment: Add a file to a story\n\nref: https://www.pivotaltracker.com/help/api?version=v3#upload_attachment\n\n__Arguments__\n\n+ projectId (int)     : id of the project\n+ storyId (int)       : id of the story\n+ fileData : information of file to upload\n\n```javascript\n{\n    name : filename of the file after upload\n    path : path to the file on disk\n    data : if no path is provided, one may\n           simply put the data of the file in there instead\n}\n```\n\n### pivotal.addStoryComment: Add a comment to a story\n\nref: https://www.pivotaltracker.com/help/api?version=v3#add_note\n\n__Arguments__\n\n+ projectId (int)     : id of the project\n+ storyId (int)       : id of the story\n+ comment (string)    : The text of the comment to add\n\n### pivotal.updateStory: Update story infos and/or move a story to a different project\n\nref: https://www.pivotaltracker.com/help/api?version=v3#update_story\n\n__Arguments__\n\n+ projectId (int)     : id of the project\n+ storyData : data of the story\n\n```javascript\n{\n    project_id     : Id of the project\n    name           : Name of this story\n    story_type     : bug, feature, chore, release\n    estimate (int) : number which indicates the level of difficulty of the story\n    description    : description,\n    labels         : Comma-separated list of labels\n    requested_by   : Name of the requester\n                   (should be an existing member person name,\n                   but I dont know if this is an actual limitation)\n}\n```\n\n### pivotal.moveStory: move a story in the list of priority\n\nref: https://www.pivotaltracker.com/help/api?version=v3#move_stories\n\n__Arguments__\n\n+ projectId (int)     : id of the project\n+ storyId (int)       : id of the story\n+ moveData : Information on how the move should happen\n\n```javascript\n{\n    target : Id of the destination story\n    move   : before or after (the target story)\n}\n```\n\n### pivotal.removeStory: remove a story from a project\n\nref: https://www.pivotaltracker.com/help/api?version=v3#delete_story\n\n__Arguments__\n\n+ projectId (int)     : id of the project\n+ storyId (int)       : id of the story\n\n### pivotal.deliverAllFinishedStories: self-explanatory\n\nref: https://www.pivotaltracker.com/help/api?version=v3#deliver_all_finished\n\n__Arguments__\n\n+ projectId (int)     : id of the project\n\n### pivotal.getTasks: Get tasks for a story\n\nref: https://www.pivotaltracker.com/help/api?version=v3#view_task\n\n__Arguments__\n\n+ projectId (int)     : id of the project\n+ storyId (int)       : id of the story\n\n### pivotal.getTask: Get a task from a story\n\nref: https://www.pivotaltracker.com/help/api?version=v3#view_task\n\n__Arguments__\n\n+ projectId (int)     : id of the project\n+ storyId (int)       : id of the story\n+ taskId (int)        : id of the task\n\n### pivotal.addTask : add a task to a story\n\nref: https://www.pivotaltracker.com/help/api?version=v3#add_task\n\n__Arguments__\n\n+ projectId (int)     : id of the project\n+ storyId (int)       : id of the story\n+ taskData : data of the task\n\n```javascript\n{\n    description : text of the task\n    complete    : true of false\n}\n```\n\n### pivotal.updateTask : add a task to a story\n\nref: https://www.pivotaltracker.com/help/api?version=v3#update_task\n\n__Arguments__\n\n+ projectId (int)     : id of the project\n+ storyId (int)       : id of the story\n+ taskId (int)        : id of the task\n+ taskData : data of the task\n\n```javascript\n{\n    description : text of the task\n    complete    : true of false\n}\n```\n\n### pivotal.removeTask : remove a task from a story\n\nref: https://www.pivotaltracker.com/help/api?version=v3#delete_task\n\n__Arguments__\n\n+ projectId (int)     : id of the project\n+ storyId (int)       : id of the story\n+ taskId (int)        : id of the task\n\n",
  "_id": "pivotal@0.1.3",
  "_from": "pivotal@*"
}
